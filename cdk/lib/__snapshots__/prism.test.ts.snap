// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Prism stack matches the snapshot 1`] = `
Object {
  "Mappings": Object {
    "stagemapping": Object {
      "CODE": Object {
        "maxInstances": 2,
        "minInstances": 1,
      },
      "PROD": Object {
        "maxInstances": 4,
        "minInstances": 2,
      },
    },
  },
  "Parameters": Object {
    "AMIPrism": Object {
      "Description": "Amazon Machine Image ID for the app prism. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "CertificateARN": Object {
      "AllowedPattern": "arn:aws:[a-z0-9]*:[a-z0-9\\\\-]*:[0-9]{12}:.*",
      "ConstraintDescription": "Must be a valid ARN, eg: arn:partition:service:region:account-id:resource-id",
      "Description": "Certificate ARN for ELB",
      "Type": "String",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "InstanceTypePrism": Object {
      "Default": "t3.small",
      "Description": "EC2 Instance Type for the app prism",
      "Type": "String",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "Stage": Object {
      "AllowedValues": Array [
        "CODE",
        "PROD",
      ],
      "Default": "CODE",
      "Description": "Stage name",
      "Type": "String",
    },
    "VpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
  },
  "Resources": Object {
    "AppServerSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "application servers",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "prism",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/prism",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AppServerSecurityGroupPrismfromprismLoadBalancerPrismSecurityGroupE6A4FDFF900028CF9C72": Object {
      "Properties": Object {
        "Description": "Port 9000 LB to fleet",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AppServerSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerPrismSecurityGroupB966F197",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AutoscalingGroup": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 800,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "AutoscalingGroupPrismLaunchConfig69D33207",
        },
        "LoadBalancerNames": Array [
          Object {
            "Ref": "LoadBalancer",
          },
        ],
        "MaxSize": Object {
          "Fn::FindInMap": Array [
            "stagemapping",
            Object {
              "Ref": "Stage",
            },
            "maxInstances",
          ],
        },
        "MinSize": Object {
          "Fn::FindInMap": Array [
            "stagemapping",
            Object {
              "Ref": "Stage",
            },
            "minInstances",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "prism",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/prism",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "prism/AutoscalingGroupPrism",
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "PrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoscalingGroupPrismInstanceProfileFBD8E2A6": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoscalingGroupPrismLaunchConfig69D33207": Object {
      "DependsOn": Array [
        "InstanceRolePrism96D154B7",
      ],
      "Properties": Object {
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/sda1",
            "Ebs": Object {
              "VolumeSize": 8,
              "VolumeType": "gp2",
            },
          },
        ],
        "IamInstanceProfile": Object {
          "Ref": "AutoscalingGroupPrismInstanceProfileFBD8E2A6",
        },
        "ImageId": Object {
          "Ref": "AMIPrism",
        },
        "InstanceType": Object {
          "Ref": "InstanceTypePrism",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "GuHttpsEgressSecurityGroupPrism4A68FA56",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "WazuhSecurityGroup",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "AppServerSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
mkdir -p $(dirname '/prism/prism.deb')
aws s3 cp 's3://",
                Object {
                  "Ref": "DistributionBucketName",
                },
                "/deploy/",
                Object {
                  "Ref": "Stage",
                },
                "/prism/prism.deb' '/prism/prism.deb'
dpkg -i /prism/prism.deb",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "ConfigPolicyA2EB9456": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/config-deploy",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ConfigPolicyA2EB9456",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrawlerPolicyB8C49604": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Array [
                "arn:aws:iam::*:role/*Prism*",
                "arn:aws:iam::*:role/*prism*",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrawlerPolicyB8C49604",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataPolicyCE0B28AE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::prism-data/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataPolicyCE0B28AE",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DescribeEC2BonusPolicy6E2176D6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "EC2:Describe*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DescribeEC2BonusPolicy6E2176D6",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyPrismBDF1EF88": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/deploy/",
                    Object {
                      "Ref": "Stage",
                    },
                    "/prism/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyPrismBDF1EF88",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupPrism4A68FA56": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "prism",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/prism",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupPrismfromprismLoadBalancerPrismSecurityGroupE6A4FDFF900079618B08": Object {
      "Properties": Object {
        "Description": "Port 9000 LB to fleet",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupPrism4A68FA56",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerPrismSecurityGroupB966F197",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRolePrism96D154B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "prism",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/prism",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LoadBalancer": Object {
      "Properties": Object {
        "CrossZone": true,
        "HealthCheck": Object {
          "HealthyThreshold": "2",
          "Interval": "5",
          "Target": "HTTP:9000/management/healthcheck",
          "Timeout": "3",
          "UnhealthyThreshold": "10",
        },
        "Listeners": Array [
          Object {
            "InstancePort": "9000",
            "InstanceProtocol": "http",
            "LoadBalancerPort": "443",
            "Protocol": "https",
            "SSLCertificateId": Object {
              "Ref": "CertificateARN",
            },
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerPrismSecurityGroupB966F197",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "PrivateSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "prism",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/prism",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
    },
    "LoadBalancerPrismSecurityGroupB966F197": Object {
      "Properties": Object {
        "GroupDescription": "prism/LoadBalancerPrism/SecurityGroup",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "10.0.0.0/8",
            "Description": "Default rule allow on 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "prism",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/prism",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerPrismSecurityGrouptoprismAppServerSecurityGroupPrismF277483B900013F7178D": Object {
      "Properties": Object {
        "Description": "Port 9000 LB to fleet",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AppServerSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerPrismSecurityGroupB966F197",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerPrismSecurityGrouptoprismGuHttpsEgressSecurityGroupPrismF365BAA79000A91E1244": Object {
      "Properties": Object {
        "Description": "Port 9000 LB to fleet",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupPrism4A68FA56",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerPrismSecurityGroupB966F197",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadPrism8EED3EF6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    Object {
                      "Ref": "Stage",
                    },
                    "/deploy/prism",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMRunCommandPolicy244E1613": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePrism96D154B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "prism",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/prism",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;
